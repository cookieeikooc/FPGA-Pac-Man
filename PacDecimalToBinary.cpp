//
//  Pac Decimal to Binary.cpp
//  
//
//  Created by cookieeikooc on 2024/6/7.
//

#include <iostream>
#include <string>
#include <fstream>
using namespace std;

int main()
{
    ifstream fin("input.txt");
    ofstream fout("output.txt");
    if (fin.fail()) {
        cout << "Failed to open input file.";
        exit(1);
    }
    else if (fout.fail()) {
        cout << "Failed to open output file.";
        exit(1);
    }
    
    int num;
    while (!fin.eof()) {
        fin >> num;
        if (fin.eof()) {
            break;
        }
        switch (num) {
            case 0:
                fout << "00000";
                break;
            case 1:
                fout << "00001";
                break;
            case 2:
                fout << "00010";
                break;
            case 3:
                fout << "00011";
                break;
            case 4:
                fout << "00100";
                break;
            case 5:
                fout << "00101";
                break;
            case 6:
                fout << "00110";
                break;
            case 7:
                fout << "00111";
                break;
            case 8:
                fout << "01000";
                break;
            case 9:
                fout << "01001";
                break;
            case 10:
                fout << "01010";
                break;
            case 11:
                fout << "01011";
                break;
            case 12:
                fout << "01100";
                break;
            case 13:
                fout << "01101";
                break;
            case 14:
                fout << "01110";
                break;
            case 15:
                fout << "01111";
                break;
            case 16:
                fout << "10000";
                break;
            case 17:
                fout << "10001";
                break;
            case 18:
                fout << "10010";
                break;
            case 19:
                fout << "10011";
                break;
            case 20:
                fout << "10100";
                break;
            case 21:
                fout << "10101";
                break;
            case 22:
                fout << "10110";
                break;
            case 23:
                fout << "10111";
                break;
            case 24:
                fout << "11000";
                break;
            case 25:
                fout << "11001";
                break;
            case 26:
                fout << "11010";
                break;
            case 27:
                fout << "11011";
                break;
            case 28:
                fout << "11100";
                break;
            case 29:
                fout << "11101";
                break;
            default:
                fout << "error";
                break;
        }
        fout << ' ';
        fin >> num;
        switch (num) {
            case 0:
                fout << "00000";
                break;
            case 1:
                fout << "00001";
                break;
            case 2:
                fout << "00010";
                break;
            case 3:
                fout << "00011";
                break;
            case 4:
                fout << "00100";
                break;
            case 5:
                fout << "00101";
                break;
            case 6:
                fout << "00110";
                break;
            case 7:
                fout << "00111";
                break;
            case 8:
                fout << "01000";
                break;
            case 9:
                fout << "01001";
                break;
            case 10:
                fout << "01010";
                break;
            case 11:
                fout << "01011";
                break;
            case 12:
                fout << "01100";
                break;
            case 13:
                fout << "01101";
                break;
            case 14:
                fout << "01110";
                break;
            case 15:
                fout << "01111";
                break;
            case 16:
                fout << "10000";
                break;
            case 17:
                fout << "10001";
                break;
            case 18:
                fout << "10010";
                break;
            case 19:
                fout << "10011";
                break;
            case 20:
                fout << "10100";
                break;
            case 21:
                fout << "10101";
                break;
            case 22:
                fout << "10110";
                break;
            case 23:
                fout << "10111";
                break;
            case 24:
                fout << "11000";
                break;
            case 25:
                fout << "11001";
                break;
            case 26:
                fout << "11010";
                break;
            case 27:
                fout << "11011";
                break;
            case 28:
                fout << "11100";
                break;
            case 29:
                fout << "11101";
                break;
            default:
                fout << "error";
                break;
        }
        fout << '\n';
    }
    
    fin.close();
    fout.close();
    return 0;
}

/*
Before:

1 1
1 2
1 3
1 4
1 5
1 6
1 7
1 8
1 9
1 10
1 11
1 12
1 15
1 16
1 17
1 18
1 19
1 20
1 21
1 22
1 23
1 24
1 25
1 26
2 1
2 6
2 12
2 15
2 21
2 26
3 1
3 6
3 12
3 15
3 21
3 26
4 1
4 6
4 12
4 15
4 21
4 26
5 1
5 2
5 3
5 4
5 5
5 6
5 7
5 8
5 9
5 10
5 11
5 12
5 13
5 14
5 15
5 16
5 17
5 18
5 19
5 20
5 21
5 22
5 23
5 24
5 25
5 26
6 1
6 6
6 9
6 18
6 21
6 26
7 1
7 6
7 9
7 18
7 21
7 26
8 1
8 2
8 3
8 4
8 5
8 6
8 9
8 10
8 11
8 12
8 15
8 16
8 17
8 18
8 21
8 22
8 23
8 24
8 25
8 26
9 6
9 21
10 6
10 21
11 6
11 21
12 6
12 21
13 6
13 21
14 6
14 21
15 6
15 21
16 6
16 21
17 6
17 21
18 6
18 21
19 6
19 21
20 1
20 2
20 3
20 4
20 5
20 6
20 7
20 8
20 9
20 10
20 11
20 12
20 15
20 16
20 17
20 18
20 19
20 20
20 21
20 22
20 23
20 24
20 25
20 26
21 1
21 6
21 12
21 15
21 21
21 26
22 1
22 6
22 12
22 15
22 21
22 26
23 1
23 2
23 3
23 6
23 7
23 8
23 9
23 10
23 11
23 12
23 15
23 16
23 17
23 18
23 19
23 20
23 21
23 24
23 25
23 26
24 3
24 6
24 9
24 18
24 21
24 24
25 3
25 6
25 9
25 18
25 21
25 24
26 1
26 2
26 3
26 4
26 5
26 6
26 9
26 10
26 11
26 12
26 15
26 16
26 17
26 18
26 21
26 22
26 23
26 24
26 25
26 26
27 1
27 12
27 15
27 26
28 1
28 12
28 15
28 26
29 1
29 2
29 3
29 4
29 5
29 6
29 7
29 8
29 9
29 10
29 11
29 12
29 13
29 14
29 15
29 16
29 17
29 18
29 19
29 20
29 21
29 22
29 23
29 24
29 25
29 26

After:

00001 00001
00001 00010
00001 00011
00001 00100
00001 00101
00001 00110
00001 00111
00001 01000
00001 01001
00001 01010
00001 01011
00001 01100
00001 01111
00001 10000
00001 10001
00001 10010
00001 10011
00001 10100
00001 10101
00001 10110
00001 10111
00001 11000
00001 11001
00001 11010
00010 00001
00010 00110
00010 01100
00010 01111
00010 10101
00010 11010
00011 00001
00011 00110
00011 01100
00011 01111
00011 10101
00011 11010
00100 00001
00100 00110
00100 01100
00100 01111
00100 10101
00100 11010
00101 00001
00101 00010
00101 00011
00101 00100
00101 00101
00101 00110
00101 00111
00101 01000
00101 01001
00101 01010
00101 01011
00101 01100
00101 01101
00101 01110
00101 01111
00101 10000
00101 10001
00101 10010
00101 10011
00101 10100
00101 10101
00101 10110
00101 10111
00101 11000
00101 11001
00101 11010
00110 00001
00110 00110
00110 01001
00110 10010
00110 10101
00110 11010
00111 00001
00111 00110
00111 01001
00111 10010
00111 10101
00111 11010
01000 00001
01000 00010
01000 00011
01000 00100
01000 00101
01000 00110
01000 01001
01000 01010
01000 01011
01000 01100
01000 01111
01000 10000
01000 10001
01000 10010
01000 10101
01000 10110
01000 10111
01000 11000
01000 11001
01000 11010
01001 00110
01001 10101
01010 00110
01010 10101
01011 00110
01011 10101
01100 00110
01100 10101
01101 00110
01101 10101
01110 00110
01110 10101
01111 00110
01111 10101
10000 00110
10000 10101
10001 00110
10001 10101
10010 00110
10010 10101
10011 00110
10011 10101
10100 00001
10100 00010
10100 00011
10100 00100
10100 00101
10100 00110
10100 00111
10100 01000
10100 01001
10100 01010
10100 01011
10100 01100
10100 01111
10100 10000
10100 10001
10100 10010
10100 10011
10100 10100
10100 10101
10100 10110
10100 10111
10100 11000
10100 11001
10100 11010
10101 00001
10101 00110
10101 01100
10101 01111
10101 10101
10101 11010
10110 00001
10110 00110
10110 01100
10110 01111
10110 10101
10110 11010
10111 00001
10111 00010
10111 00011
10111 00110
10111 00111
10111 01000
10111 01001
10111 01010
10111 01011
10111 01100
10111 01111
10111 10000
10111 10001
10111 10010
10111 10011
10111 10100
10111 10101
10111 11000
10111 11001
10111 11010
11000 00011
11000 00110
11000 01001
11000 10010
11000 10101
11000 11000
11001 00011
11001 00110
11001 01001
11001 10010
11001 10101
11001 11000
11010 00001
11010 00010
11010 00011
11010 00100
11010 00101
11010 00110
11010 01001
11010 01010
11010 01011
11010 01100
11010 01111
11010 10000
11010 10001
11010 10010
11010 10101
11010 10110
11010 10111
11010 11000
11010 11001
11010 11010
11011 00001
11011 01100
11011 01111
11011 11010
11100 00001
11100 01100
11100 01111
11100 11010
11101 00001
11101 00010
11101 00011
11101 00100
11101 00101
11101 00110
11101 00111
11101 01000
11101 01001
11101 01010
11101 01011
11101 01100
11101 01101
11101 01110
11101 01111
11101 10000
11101 10001
11101 10010
11101 10011
11101 10100
11101 10101
11101 10110
11101 10111
11101 11000
11101 11001
11101 11010
*/